name: Test - Container Image Build

on:
  push:
    branches: [master,develop]
  pull_request:
    branches: [master,develop]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # - name: Cache Docker layers
      #   uses: actions/cache@v2
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-single-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-single-buildx

      # - name: Build the Docker image
      #   run: |
      #     docker build -t nginx_proxy:latest -t nginx_proxy:$(date +%s) .
      #     docker images -a
      #     docker-compose -f docker-compose.yaml up -d

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: nginx_proxy:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test with curl
        run: |
          docker run -d --name nginx_proxy nginx_proxy:latest
          nginx_proxy_ip=$(docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' nginx_proxy)
          err=1
          count=0
          while [[ $err != 0 ]]; do
            curl https://www.google.com -svo /dev/null -x $nginx_proxy_ip:8888
            err=$?
            [[ $err == 0 ]] && exit 0
            count=$(( count + 1 ))
            [[ $count -ge 5 ]] && exit 1
          done

      - name: Stop containers and show logs
        if: always()
        run: |
          docker exec -i nginx_proxy cat /var/log/nginx_errors.log || true
          docker exec -i nginx_proxy cat /var/log/nginx_access.log || true
          docker rm -f nginx_proxy

      # - name: Move cache
      #   if: always()
      #   run: |
      #     rm -rf /tmp/.buildx-cache
      #     mv /tmp/.buildx-cache-new /tmp/.buildx-cache
